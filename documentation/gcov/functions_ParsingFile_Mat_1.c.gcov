        -:    0:Source:functions.c
        -:    0:Graph:functions.gcno
        -:    0:Data:functions.gcda
        -:    0:Runs:5
        -:    1:#include <stdio.h>
        -:    2:#include <stdlib.h>
        -:    3:#include <string.h>
        -:    4:#include <stdbool.h>
        -:    5:#include "functions.h"
        -:    6:#include "globals.h"
        -:    7:#include "structures.h"
        -:    8:
        -:    9:
    #####:   10:void saveFileState(char* outputFileName){
        -:   11:     FILE *fileptr;
        -:   12:     FILE *outputFilePtr;
    #####:   13:     fileptr = fopen(GlobalUserInputtedFileName,"r");
    #####:   14:     outputFilePtr = fopen(outputFileName,"w");
        -:   15:     char data[256];
    #####:   16:     while(fgets(data,256,fileptr) != NULL){
    #####:   17:          fprintf(outputFilePtr,"%s",data);
        -:   18:     }
    #####:   19:     fclose(fileptr);
    #####:   20:     fclose(outputFilePtr);
    #####:   21:}
        -:   22:
        -:   23://!Given Label name, convert it into closing bloack format seg
        2:   24:char* obtainClosingBlock(char* label){
        2:   25:     int labelLen = strlen(label);
        2:   26:     char *closingBlock = (char*)malloc(labelLen+1);
        2:   27:     closingBlock[0] = '<';
        2:   28:     closingBlock[1] = '/';
        2:   29:     strcat(closingBlock,label);
        2:   30:     strcat(closingBlock,">");
        2:   31:     return closingBlock;
        -:   32:};
        -:   33:
        -:   34:
        -:   35://! Given string, will return nearest Label inc
        3:   36:char* obtainLabelName(char* string){
        -:   37:     char duplicate[10000];
        -:   38:     char *before;
        3:   39:     strcpy(duplicate,string);
        3:   40:     before = strtok(duplicate,">");
        3:   41:     before = before + 1;
        3:   42:     char *returnStatement = (char *)malloc(sizeof(before));
        3:   43:     strcpy(returnStatement,before);
        3:   44:     return returnStatement;
        -:   45:}
        -:   46:
        -:   47://! Will obtain all data in between opening and closing blocks, fails to free pointers
        1:   48:char* obtainInnerData(char * string){
        -:   49:     char duplicate[10000];
        1:   50:     strcpy(duplicate,string);
        1:   51:     char* Label = obtainLabelName(string);
        1:   52:     char *ClosingBlock = obtainClosingBlock(Label);
        1:   53:     char *returnStatement = (char *)malloc(strlen(string));
        -:   54:     char *result;
        1:   55:     memset(returnStatement,'\0',strlen(string));
        -:   56:
        1:   57:     result = strtok(duplicate,ClosingBlock);
        1:   58:     result = strtok(result,">");
        1:   59:     strcpy(returnStatement,result);
        1:   60:     return returnStatement;
        -:   61:}
        -:   62:
